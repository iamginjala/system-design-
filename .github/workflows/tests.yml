name: My First Github Actions
on:
  push:
    branches: [testing-setup, main]
  pull_request:
    branches: [main]
jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_DB: ecommerce
          POSTGRES_USER: ecommerce_user
          POSTGRES_PASSWORD: ecommerce_pass
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install dependencies
        working-directory: ecommerce-api
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Initialize database
        working-directory: ecommerce-api
        env:
          DATABASE_URL: postgresql+psycopg2://ecommerce_user:ecommerce_pass@localhost:5432/ecommerce
        run: |
          python init_db.py
      - name: Run tests
        working-directory: ecommerce-api
        env:
          DATABASE_URL: postgresql+psycopg2://ecommerce_user:ecommerce_pass@localhost:5432/ecommerce
          REDIS_HOST: localhost
          REDIS_PORT: 6379
          SECRET_KEY: test-secret-key-for-ci
          JWT_EXPIRATION_HOURS: 24
        run: |
          python -m pytest tests/ -v --cov=. --cov-report=term --cov-report=xml
      - name: upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./ecommerce-api/coverage.xml
          fail_ci_if_error: false
  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: Trigger Render deployment
        env:
          RENDER_DEPLOY_HOOK: ${{ secrets.RENDER_DEPLOY_HOOK }}
        run: |
          curl -X POST "$RENDER_DEPLOY_HOOK"
